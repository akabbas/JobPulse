{
  "total_tickets": 100,
  "analysis_timestamp": "2025-10-16T14:30:00Z",
  "ticket_analysis": [
    {
      "issue_key": "JB-131",
      "summary": "Add User Authentication System",
      "full_text": "add user authentication system implement user registration, login, and profile management.category: general backlogacceptance criteria:\u2022 user registration and login\u2022 password reset functionality\u2022 profile management\u2022 session management",
      "word_count": 25,
      "keywords": [
        "function",
        "user"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "function"
      ],
      "business_indicators": [
        "user"
      ],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-130",
      "summary": "Implement Real-time Job Alerts",
      "full_text": "implement real-time job alerts add real-time notifications for new job postings matching user criteria.category: general backlogacceptance criteria:\u2022 real-time notification system\u2022 user preference management\u2022 email and push notifications\u2022 alert frequency controls",
      "word_count": 30,
      "keywords": [
        "user",
        "real-time",
        "ai"
      ],
      "themes": [
        "data",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [
        "user"
      ],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-129",
      "summary": "Add API Rate Limiting for Premium Users",
      "full_text": "add api rate limiting for premium users implement tiered api access with higher limits for premium users.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 tiered rate limiting implemented\u2022 premium user identification\u2022 usage tracking and billing\u2022 api key management system",
      "word_count": 36,
      "keywords": [
        "api",
        "user",
        "premium",
        "billing",
        "monetization",
        "high"
      ],
      "themes": [],
      "priority_indicators": [
        "high"
      ],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [
        "user",
        "premium",
        "billing",
        "monetization"
      ],
      "primary_theme": "general",
      "complexity": "medium",
      "urgency": "high"
    },
    {
      "issue_key": "JB-128",
      "summary": "Implement Premium Job Matching Features",
      "full_text": "implement premium job matching features add advanced job matching algorithms and premium features for monetization.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 advanced matching algorithms implemented\u2022 premium feature flag system\u2022 user subscription management\u2022 revenue tracking dashboard",
      "word_count": 33,
      "keywords": [
        "user",
        "revenue",
        "premium",
        "subscription",
        "monetization",
        "dashboard",
        "algorithm"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [
        "user",
        "revenue",
        "premium",
        "subscription",
        "monetization",
        "dashboard"
      ],
      "primary_theme": "ai",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-127",
      "summary": "Create Architecture Decision Records",
      "full_text": "create architecture decision records document key architectural decisions and their rationale.category: to doacceptance criteria:\u2022 adr template created\u2022 key decisions documented\u2022 decision rationale included\u2022 review and approval process",
      "word_count": 27,
      "keywords": [
        "architecture"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-126",
      "summary": "Create API Documentation",
      "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.category: to doacceptance criteria:\u2022 swagger/openapi documentation\u2022 interactive api explorer\u2022 request/response examples\u2022 authentication documentation",
      "word_count": 21,
      "keywords": [
        "api"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-125",
      "summary": "Create Integration Test Suite",
      "full_text": "create integration test suite develop integration tests for api endpoints and database operations.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 api endpoint tests\u2022 database integration tests\u2022 end-to-end test scenarios\u2022 test data management",
      "word_count": 30,
      "keywords": [
        "api",
        "database",
        "endpoint",
        "integration",
        "testing",
        "data",
        "database",
        "quality"
      ],
      "themes": [
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api",
        "database",
        "endpoint",
        "integration",
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-124",
      "summary": "Add Unit Tests for All Scrapers",
      "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 unit tests for all scrapers\u2022 mock external dependencies\u2022 test coverage >80%\u2022 automated test execution",
      "word_count": 33,
      "keywords": [
        "testing",
        "quality"
      ],
      "themes": [
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-123",
      "summary": "Add Database Migration System",
      "full_text": "add database migration system implement alembic/flask-migrate for database schema management.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 alembic migration system setup\u2022 initial migration created\u2022 migration rollback support\u2022 automated migration deployment",
      "word_count": 27,
      "keywords": [
        "database",
        "migration",
        "deployment",
        "deploy",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [
        "deploy"
      ],
      "technical_indicators": [
        "database",
        "migration",
        "deployment"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "high"
    },
    {
      "issue_key": "JB-122",
      "summary": "Unify Database Managers",
      "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 unified database interface created\u2022 postgresql and snowflake support\u2022 connection pooling implemented\u2022 database abstraction layer",
      "word_count": 32,
      "keywords": [
        "database",
        "architecture",
        "postgresql",
        "snowflake",
        "data",
        "snowflake",
        "database",
        "sql",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "architecture",
        "postgresql",
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-121",
      "summary": "Migrate All Remaining Scrapers",
      "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.category: to doacceptance criteria:\u2022 all scrapers migrated to basescraper\u2022 legacy scraper code removed\u2022 plugin configuration system\u2022 migration testing completed",
      "word_count": 31,
      "keywords": [
        "code",
        "migration",
        "testing",
        "architecture",
        "configuration",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "code",
        "migration",
        "testing",
        "architecture",
        "configuration"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-120",
      "summary": "Update Web Dashboard to Use ScraperManager",
      "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 scrapermanager integrated in app.py\u2022 dynamic scraper loading\u2022 plugin hot-reloading support\u2022 error handling for plugin failures",
      "word_count": 37,
      "keywords": [
        "architecture",
        "dashboard",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-119",
      "summary": "Migrate Core Scrapers to BaseScraper",
      "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 indeed scraper migrated\u2022 linkedin scraper migrated\u2022 glassdoor scraper migrated\u2022 basescraper functionality verified",
      "word_count": 32,
      "keywords": [
        "function",
        "refactor",
        "architecture",
        "priority"
      ],
      "themes": [],
      "priority_indicators": [
        "priority"
      ],
      "technical_indicators": [
        "function",
        "refactor",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "medium",
      "urgency": "high"
    },
    {
      "issue_key": "JB-118",
      "summary": "Implement Health Check System",
      "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 health check endpoints created\u2022 database connectivity checks\u2022 external service monitoring\u2022 automated alerting system",
      "word_count": 30,
      "keywords": [
        "database",
        "endpoint",
        "monitoring",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "endpoint",
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-117",
      "summary": "Add Rate Limiting Middleware",
      "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 rate limiting middleware added\u2022 configurable rate limits\u2022 user-specific rate limiting\u2022 monitoring and alerting",
      "word_count": 32,
      "keywords": [
        "api",
        "monitoring",
        "user",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api",
        "monitoring"
      ],
      "business_indicators": [
        "user"
      ],
      "primary_theme": "ai",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-116",
      "summary": "Implement Redis Caching",
      "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 redis integration implemented\u2022 cache invalidation strategies\u2022 performance monitoring\u2022 configuration management",
      "word_count": 27,
      "keywords": [
        "integration",
        "performance",
        "monitoring",
        "configuration",
        "redis",
        "caching",
        "validation"
      ],
      "themes": [
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "performance",
        "monitoring",
        "configuration",
        "redis",
        "caching"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-115",
      "summary": "Fix Lever Scraper (0% Success Rate)",
      "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 lever scraper completely rebuilt\u2022 success rate >80% achieved\u2022 proper error handling implemented\u2022 comprehensive testing added",
      "word_count": 34,
      "keywords": [
        "function",
        "testing",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [
        "function",
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-114",
      "summary": "Fix Greenhouse Scraper Issues",
      "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 all 9 broken companies fixed\u2022 success rate improved to >90%\u2022 error logging for failed companies\u2022 automated retry mechanism",
      "word_count": 39,
      "keywords": [
        "logging",
        "broken",
        "fix",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [
        "broken",
        "fix"
      ],
      "technical_indicators": [
        "logging"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-113",
      "summary": "Fix Stack Overflow Scraper",
      "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.category: this weekacceptance criteria:\u2022 403 errors resolved\u2022 updated selectors for current site\u2022 anti-bot measures implemented\u2022 scraper reliability improved",
      "word_count": 31,
      "keywords": [
        "fix",
        "low"
      ],
      "themes": [],
      "priority_indicators": [
        "fix",
        "low"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-112",
      "summary": "Fix Dice Scraper Selectors",
      "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.category: this weekacceptance criteria:\u2022 dice scraper selectors updated\u2022 scraper successfully extracts job data\u2022 error handling for selector failures\u2022 test coverage for dice scraper",
      "word_count": 36,
      "keywords": [
        "fix",
        "data",
        "ai"
      ],
      "themes": [
        "data",
        "ai"
      ],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-111",
      "summary": "Configure Snowflake Data Sharing",
      "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.category: \ud83d\ude80 data upgradesacceptance criteria:\u2022 data sharing policies configured\u2022 secure access controls implemented\u2022 external data sharing enabled\u2022 documentation for data sharing setup",
      "word_count": 37,
      "keywords": [
        "snowflake",
        "data",
        "snowflake",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-110",
      "summary": "Add Streamlit Dashboard Integration",
      "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 streamlit app created\u2022 snowflake connection established\u2022 interactive analytics dashboard\u2022 real-time data visualization",
      "word_count": 34,
      "keywords": [
        "integration",
        "snowflake",
        "analytics",
        "dashboard",
        "data",
        "analytics",
        "snowflake",
        "lake",
        "real-time",
        "ai",
        "ml"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data",
        "ai",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [
        "analytics",
        "dashboard"
      ],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-109",
      "summary": "Implement Snowflake Cortex AI Integration",
      "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 cortex ai functions integrated\u2022 job analysis using snowflake ai\u2022 skill matching with ai assistance\u2022 performance optimization for ai queries",
      "word_count": 41,
      "keywords": [
        "function",
        "integration",
        "performance",
        "snowflake",
        "analytics",
        "analytics",
        "snowflake",
        "lake",
        "ai",
        "cortex"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "ai",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "function",
        "integration",
        "performance",
        "snowflake"
      ],
      "business_indicators": [
        "analytics"
      ],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-108",
      "summary": "Create Snowflake Native App Manifest",
      "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.category: \ud83d\ude80 data upgradesacceptance criteria:\u2022 native app manifest file created\u2022 app metadata and permissions defined\u2022 installation and configuration scripts\u2022 app marketplace listing prepared",
      "word_count": 40,
      "keywords": [
        "configuration",
        "snowflake",
        "market",
        "data",
        "snowflake",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "configuration",
        "snowflake"
      ],
      "business_indicators": [
        "market"
      ],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-107",
      "summary": "Integrate Snowflake Manager into Web Dashboard",
      "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.category: this weekacceptance criteria:\u2022 snowflake manager is initialized in app.py\u2022 jobs are saved to both sqlite and snowflake\u2022 error handling for snowflake connection failures\u2022 configuration for snowflake credentials",
      "word_count": 52,
      "keywords": [
        "configuration",
        "snowflake",
        "dashboard",
        "production",
        "data",
        "snowflake",
        "sql",
        "lake",
        "ai"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [
        "production"
      ],
      "technical_indicators": [
        "configuration",
        "snowflake"
      ],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "high"
    },
    {
      "issue_key": "JB-106",
      "summary": "Documentation & Developer Experience",
      "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.category: \ud83e\uddea testing & quality",
      "word_count": 15,
      "keywords": [
        "testing",
        "quality"
      ],
      "themes": [
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-105",
      "summary": "Testing & Quality Assurance",
      "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.category: \ud83e\uddea testing & quality",
      "word_count": 16,
      "keywords": [
        "testing",
        "quality"
      ],
      "themes": [
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-104",
      "summary": "Database & Infrastructure",
      "full_text": "database & infrastructure unify database systems and implement proper infrastructure management.category: \ud83c\udfd7\ufe0f architecture",
      "word_count": 13,
      "keywords": [
        "database",
        "infrastructure",
        "architecture",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "infrastructure",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-103",
      "summary": "Production Stability & Monitoring",
      "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.category: \ud83d\udc1b bug fixes",
      "word_count": 17,
      "keywords": [
        "monitoring",
        "broken",
        "fix",
        "production"
      ],
      "themes": [],
      "priority_indicators": [
        "broken",
        "fix",
        "production"
      ],
      "technical_indicators": [
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-102",
      "summary": "Plugin Architecture Migration",
      "full_text": "plugin architecture migration migrate all scrapers to the new plugin architecture for better maintainability and extensibility.category: \ud83c\udfd7\ufe0f architecture",
      "word_count": 18,
      "keywords": [
        "migration",
        "architecture",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "migration",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-101",
      "summary": "Snowflake Enterprise Integration",
      "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.category: \ud83d\ude80 data upgrades",
      "word_count": 22,
      "keywords": [
        "integration",
        "snowflake",
        "analytics",
        "data",
        "analytics",
        "snowflake",
        "warehouse",
        "lake",
        "ai"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [
        "analytics"
      ],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-100",
      "summary": "Create Architecture Decision Records",
      "full_text": "create architecture decision records document key architectural decisions and their rationale.",
      "word_count": 11,
      "keywords": [
        "architecture"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-99",
      "summary": "Create API Documentation",
      "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
      "word_count": 9,
      "keywords": [
        "api"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-98",
      "summary": "Create Integration Test Suite",
      "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
      "word_count": 13,
      "keywords": [
        "api",
        "database",
        "endpoint",
        "integration",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api",
        "database",
        "endpoint",
        "integration"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-97",
      "summary": "Add Unit Tests for All Scrapers",
      "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
      "word_count": 14,
      "keywords": [],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-96",
      "summary": "Add Database Migration System",
      "full_text": "add database migration system implement alembic/flask-migrate for database schema management.",
      "word_count": 10,
      "keywords": [
        "database",
        "migration",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "migration"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-95",
      "summary": "Unify Database Managers",
      "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
      "word_count": 15,
      "keywords": [
        "database",
        "postgresql",
        "snowflake",
        "data",
        "snowflake",
        "database",
        "sql",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "postgresql",
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-94",
      "summary": "Migrate All Remaining Scrapers",
      "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.",
      "word_count": 13,
      "keywords": [
        "architecture",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-93",
      "summary": "Update Web Dashboard to Use ScraperManager",
      "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
      "word_count": 19,
      "keywords": [
        "dashboard"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-92",
      "summary": "Migrate Core Scrapers to BaseScraper",
      "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
      "word_count": 17,
      "keywords": [
        "refactor",
        "architecture",
        "priority"
      ],
      "themes": [],
      "priority_indicators": [
        "priority"
      ],
      "technical_indicators": [
        "refactor",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-91",
      "summary": "Implement Health Check System",
      "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.",
      "word_count": 13,
      "keywords": [
        "endpoint",
        "monitoring"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "endpoint",
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-90",
      "summary": "Add Rate Limiting Middleware",
      "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.",
      "word_count": 15,
      "keywords": [
        "api",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-89",
      "summary": "Implement Redis Caching",
      "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.",
      "word_count": 13,
      "keywords": [
        "performance",
        "redis",
        "caching"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "performance",
        "redis",
        "caching"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-88",
      "summary": "Fix Lever Scraper (0% Success Rate)",
      "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
      "word_count": 15,
      "keywords": [
        "function",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [
        "function"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-87",
      "summary": "Fix Greenhouse Scraper Issues",
      "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
      "word_count": 17,
      "keywords": [
        "broken",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "broken",
        "fix"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-86",
      "summary": "Fix Stack Overflow Scraper",
      "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.",
      "word_count": 14,
      "keywords": [
        "fix",
        "low"
      ],
      "themes": [],
      "priority_indicators": [
        "fix",
        "low"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-85",
      "summary": "Fix Dice Scraper Selectors",
      "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.",
      "word_count": 14,
      "keywords": [
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-84",
      "summary": "Configure Snowflake Data Sharing",
      "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.",
      "word_count": 16,
      "keywords": [
        "snowflake",
        "data",
        "snowflake",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-83",
      "summary": "Add Streamlit Dashboard Integration",
      "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
      "word_count": 17,
      "keywords": [
        "integration",
        "snowflake",
        "analytics",
        "dashboard",
        "analytics",
        "snowflake",
        "lake",
        "ml"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [
        "analytics",
        "dashboard"
      ],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-82",
      "summary": "Implement Snowflake Cortex AI Integration",
      "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.",
      "word_count": 17,
      "keywords": [
        "integration",
        "snowflake",
        "snowflake",
        "lake",
        "ai",
        "cortex"
      ],
      "themes": [
        "data",
        "data",
        "ai",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-81",
      "summary": "Create Snowflake Native App Manifest",
      "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.",
      "word_count": 18,
      "keywords": [
        "snowflake",
        "snowflake",
        "lake"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-80",
      "summary": "Integrate Snowflake Manager into Web Dashboard",
      "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
      "word_count": 25,
      "keywords": [
        "snowflake",
        "dashboard",
        "production",
        "data",
        "snowflake",
        "lake",
        "ai"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [
        "production"
      ],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "high"
    },
    {
      "issue_key": "JB-79",
      "summary": "Documentation & Developer Experience",
      "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.",
      "word_count": 11,
      "keywords": [],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-78",
      "summary": "Testing & Quality Assurance",
      "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.",
      "word_count": 12,
      "keywords": [
        "testing",
        "quality"
      ],
      "themes": [
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-77",
      "summary": "Database & Infrastructure",
      "full_text": "database & infrastructure unify database systems and implement proper infrastructure management.",
      "word_count": 11,
      "keywords": [
        "database",
        "infrastructure",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "infrastructure"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-76",
      "summary": "Production Stability & Monitoring",
      "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.",
      "word_count": 14,
      "keywords": [
        "monitoring",
        "broken",
        "fix",
        "production"
      ],
      "themes": [],
      "priority_indicators": [
        "broken",
        "fix",
        "production"
      ],
      "technical_indicators": [
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-75",
      "summary": "Plugin Architecture Migration",
      "full_text": "plugin architecture migration migrate all scrapers to the new plugin architecture for better maintainability and extensibility.",
      "word_count": 16,
      "keywords": [
        "migration",
        "architecture",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "migration",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-74",
      "summary": "Snowflake Enterprise Integration",
      "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
      "word_count": 19,
      "keywords": [
        "integration",
        "snowflake",
        "analytics",
        "data",
        "analytics",
        "snowflake",
        "warehouse",
        "lake",
        "ai"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [
        "analytics"
      ],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-73",
      "summary": "Test Epic",
      "full_text": "test epic test epic description",
      "word_count": 5,
      "keywords": [],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-72",
      "summary": "Create Architecture Decision Records",
      "full_text": "create architecture decision records document key architectural decisions and their rationale.",
      "word_count": 11,
      "keywords": [
        "architecture"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-71",
      "summary": "Create API Documentation",
      "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
      "word_count": 9,
      "keywords": [
        "api"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-70",
      "summary": "Create Integration Test Suite",
      "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
      "word_count": 13,
      "keywords": [
        "api",
        "database",
        "endpoint",
        "integration",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api",
        "database",
        "endpoint",
        "integration"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-69",
      "summary": "Add Unit Tests for All Scrapers",
      "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
      "word_count": 14,
      "keywords": [],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-68",
      "summary": "Add Database Migration System",
      "full_text": "add database migration system implement alembic/flask-migrate for database schema management.",
      "word_count": 10,
      "keywords": [
        "database",
        "migration",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "migration"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-67",
      "summary": "Unify Database Managers",
      "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
      "word_count": 15,
      "keywords": [
        "database",
        "postgresql",
        "snowflake",
        "data",
        "snowflake",
        "database",
        "sql",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "postgresql",
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-66",
      "summary": "Migrate All Remaining Scrapers",
      "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.",
      "word_count": 13,
      "keywords": [
        "architecture",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-65",
      "summary": "Update Web Dashboard to Use ScraperManager",
      "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
      "word_count": 19,
      "keywords": [
        "dashboard"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-64",
      "summary": "Migrate Core Scrapers to BaseScraper",
      "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
      "word_count": 17,
      "keywords": [
        "refactor",
        "architecture",
        "priority"
      ],
      "themes": [],
      "priority_indicators": [
        "priority"
      ],
      "technical_indicators": [
        "refactor",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-63",
      "summary": "Implement Health Check System",
      "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.",
      "word_count": 13,
      "keywords": [
        "endpoint",
        "monitoring"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "endpoint",
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-62",
      "summary": "Add Rate Limiting Middleware",
      "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.",
      "word_count": 15,
      "keywords": [
        "api",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-61",
      "summary": "Implement Redis Caching",
      "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.",
      "word_count": 13,
      "keywords": [
        "performance",
        "redis",
        "caching"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "performance",
        "redis",
        "caching"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-60",
      "summary": "Fix Lever Scraper (0% Success Rate)",
      "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
      "word_count": 15,
      "keywords": [
        "function",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [
        "function"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-59",
      "summary": "Fix Greenhouse Scraper Issues",
      "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
      "word_count": 17,
      "keywords": [
        "broken",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "broken",
        "fix"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-58",
      "summary": "Fix Stack Overflow Scraper",
      "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.",
      "word_count": 14,
      "keywords": [
        "fix",
        "low"
      ],
      "themes": [],
      "priority_indicators": [
        "fix",
        "low"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-57",
      "summary": "Fix Dice Scraper Selectors",
      "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.",
      "word_count": 14,
      "keywords": [
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-56",
      "summary": "Configure Snowflake Data Sharing",
      "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.",
      "word_count": 16,
      "keywords": [
        "snowflake",
        "data",
        "snowflake",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-55",
      "summary": "Add Streamlit Dashboard Integration",
      "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
      "word_count": 17,
      "keywords": [
        "integration",
        "snowflake",
        "analytics",
        "dashboard",
        "analytics",
        "snowflake",
        "lake",
        "ml"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [
        "analytics",
        "dashboard"
      ],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-54",
      "summary": "Implement Snowflake Cortex AI Integration",
      "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.",
      "word_count": 17,
      "keywords": [
        "integration",
        "snowflake",
        "snowflake",
        "lake",
        "ai",
        "cortex"
      ],
      "themes": [
        "data",
        "data",
        "ai",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-53",
      "summary": "Create Snowflake Native App Manifest",
      "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.",
      "word_count": 18,
      "keywords": [
        "snowflake",
        "snowflake",
        "lake"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-52",
      "summary": "Integrate Snowflake Manager into Web Dashboard",
      "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
      "word_count": 25,
      "keywords": [
        "snowflake",
        "dashboard",
        "production",
        "data",
        "snowflake",
        "lake",
        "ai"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [
        "production"
      ],
      "technical_indicators": [
        "snowflake"
      ],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "high"
    },
    {
      "issue_key": "JB-51",
      "summary": "Documentation & Developer Experience",
      "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.",
      "word_count": 11,
      "keywords": [],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-50",
      "summary": "Testing & Quality Assurance",
      "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.",
      "word_count": 12,
      "keywords": [
        "testing",
        "quality"
      ],
      "themes": [
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "testing"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-49",
      "summary": "Database & Infrastructure",
      "full_text": "database & infrastructure unify database systems and implement proper infrastructure management.",
      "word_count": 11,
      "keywords": [
        "database",
        "infrastructure",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "infrastructure"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-48",
      "summary": "Production Stability & Monitoring",
      "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.",
      "word_count": 14,
      "keywords": [
        "monitoring",
        "broken",
        "fix",
        "production"
      ],
      "themes": [],
      "priority_indicators": [
        "broken",
        "fix",
        "production"
      ],
      "technical_indicators": [
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-47",
      "summary": "Plugin Architecture Migration",
      "full_text": "plugin architecture migration migrate all scrapers to the new plugin architecture for better maintainability and extensibility.",
      "word_count": 16,
      "keywords": [
        "migration",
        "architecture",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "migration",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-46",
      "summary": "Snowflake Enterprise Integration",
      "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
      "word_count": 19,
      "keywords": [
        "integration",
        "snowflake",
        "analytics",
        "data",
        "analytics",
        "snowflake",
        "warehouse",
        "lake",
        "ai"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data",
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "integration",
        "snowflake"
      ],
      "business_indicators": [
        "analytics"
      ],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-45",
      "summary": "Create Architecture Decision Records",
      "full_text": "create architecture decision records document key architectural decisions and their rationale.",
      "word_count": 11,
      "keywords": [
        "architecture"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-44",
      "summary": "Create API Documentation",
      "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
      "word_count": 9,
      "keywords": [
        "api"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-43",
      "summary": "Create Integration Test Suite",
      "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
      "word_count": 13,
      "keywords": [
        "api",
        "database",
        "endpoint",
        "integration",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api",
        "database",
        "endpoint",
        "integration"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-42",
      "summary": "Add Unit Tests for All Scrapers",
      "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
      "word_count": 14,
      "keywords": [],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-41",
      "summary": "Add Database Migration System",
      "full_text": "add database migration system implement alembic/flask-migrate for database schema management.",
      "word_count": 10,
      "keywords": [
        "database",
        "migration",
        "data",
        "database"
      ],
      "themes": [
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "migration"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-40",
      "summary": "Unify Database Managers",
      "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
      "word_count": 15,
      "keywords": [
        "database",
        "postgresql",
        "snowflake",
        "data",
        "snowflake",
        "database",
        "sql",
        "lake"
      ],
      "themes": [
        "data",
        "data",
        "data",
        "data",
        "data"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "database",
        "postgresql",
        "snowflake"
      ],
      "business_indicators": [],
      "primary_theme": "data",
      "complexity": "high",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-39",
      "summary": "Migrate All Remaining Scrapers",
      "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.",
      "word_count": 13,
      "keywords": [
        "architecture",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-38",
      "summary": "Update Web Dashboard to Use ScraperManager",
      "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
      "word_count": 19,
      "keywords": [
        "dashboard"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [],
      "business_indicators": [
        "dashboard"
      ],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-37",
      "summary": "Migrate Core Scrapers to BaseScraper",
      "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
      "word_count": 17,
      "keywords": [
        "refactor",
        "architecture",
        "priority"
      ],
      "themes": [],
      "priority_indicators": [
        "priority"
      ],
      "technical_indicators": [
        "refactor",
        "architecture"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-36",
      "summary": "Implement Health Check System",
      "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.",
      "word_count": 13,
      "keywords": [
        "endpoint",
        "monitoring"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "endpoint",
        "monitoring"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-35",
      "summary": "Add Rate Limiting Middleware",
      "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.",
      "word_count": 15,
      "keywords": [
        "api",
        "ai"
      ],
      "themes": [
        "ai"
      ],
      "priority_indicators": [],
      "technical_indicators": [
        "api"
      ],
      "business_indicators": [],
      "primary_theme": "ai",
      "complexity": "low",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-34",
      "summary": "Implement Redis Caching",
      "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.",
      "word_count": 13,
      "keywords": [
        "performance",
        "redis",
        "caching"
      ],
      "themes": [],
      "priority_indicators": [],
      "technical_indicators": [
        "performance",
        "redis",
        "caching"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "medium",
      "urgency": "normal"
    },
    {
      "issue_key": "JB-33",
      "summary": "Fix Lever Scraper (0% Success Rate)",
      "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
      "word_count": 15,
      "keywords": [
        "function",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "fix"
      ],
      "technical_indicators": [
        "function"
      ],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    },
    {
      "issue_key": "JB-32",
      "summary": "Fix Greenhouse Scraper Issues",
      "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
      "word_count": 17,
      "keywords": [
        "broken",
        "fix"
      ],
      "themes": [],
      "priority_indicators": [
        "broken",
        "fix"
      ],
      "technical_indicators": [],
      "business_indicators": [],
      "primary_theme": "general",
      "complexity": "low",
      "urgency": "high"
    }
  ],
  "keyword_frequency": {
    "snowflake": 44,
    "database": 32,
    "data": 28,
    "ai": 25,
    "lake": 22,
    "architecture": 18,
    "fix": 17,
    "integration": 14,
    "analytics": 14,
    "api": 13,
    "dashboard": 11,
    "monitoring": 9,
    "endpoint": 8,
    "testing": 8,
    "migration": 8,
    "function": 7,
    "broken": 7,
    "quality": 6,
    "production": 6,
    "user": 5,
    "sql": 5,
    "performance": 5,
    "postgresql": 4,
    "configuration": 4,
    "refactor": 4,
    "priority": 4,
    "redis": 4,
    "caching": 4,
    "low": 3,
    "ml": 3,
    "cortex": 3,
    "infrastructure": 3,
    "warehouse": 3,
    "real-time": 2,
    "premium": 2,
    "monetization": 2,
    "billing": 1,
    "high": 1,
    "revenue": 1,
    "subscription": 1,
    "algorithm": 1,
    "deployment": 1,
    "deploy": 1,
    "code": 1,
    "validation": 1,
    "logging": 1,
    "market": 1
  },
  "content_patterns": {
    "general": 44,
    "data": 42,
    "ai": 14
  },
  "suggested_categories": {
    "\ud83d\udea8 Critical & Urgent": {
      "description": "Critical issues requiring immediate attention",
      "tickets": [
        {
          "issue_key": "JB-129",
          "summary": "Add API Rate Limiting for Premium Users",
          "full_text": "add api rate limiting for premium users implement tiered api access with higher limits for premium users.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 tiered rate limiting implemented\u2022 premium user identification\u2022 usage tracking and billing\u2022 api key management system",
          "word_count": 36,
          "keywords": [
            "api",
            "user",
            "premium",
            "billing",
            "monetization",
            "high"
          ],
          "themes": [],
          "priority_indicators": [
            "high"
          ],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [
            "user",
            "premium",
            "billing",
            "monetization"
          ],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-123",
          "summary": "Add Database Migration System",
          "full_text": "add database migration system implement alembic/flask-migrate for database schema management.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 alembic migration system setup\u2022 initial migration created\u2022 migration rollback support\u2022 automated migration deployment",
          "word_count": 27,
          "keywords": [
            "database",
            "migration",
            "deployment",
            "deploy",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [
            "deploy"
          ],
          "technical_indicators": [
            "database",
            "migration",
            "deployment"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-119",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 indeed scraper migrated\u2022 linkedin scraper migrated\u2022 glassdoor scraper migrated\u2022 basescraper functionality verified",
          "word_count": 32,
          "keywords": [
            "function",
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "function",
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-115",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 lever scraper completely rebuilt\u2022 success rate >80% achieved\u2022 proper error handling implemented\u2022 comprehensive testing added",
          "word_count": 34,
          "keywords": [
            "function",
            "testing",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-114",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 all 9 broken companies fixed\u2022 success rate improved to >90%\u2022 error logging for failed companies\u2022 automated retry mechanism",
          "word_count": 39,
          "keywords": [
            "logging",
            "broken",
            "fix",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [
            "logging"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-113",
          "summary": "Fix Stack Overflow Scraper",
          "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.category: this weekacceptance criteria:\u2022 403 errors resolved\u2022 updated selectors for current site\u2022 anti-bot measures implemented\u2022 scraper reliability improved",
          "word_count": 31,
          "keywords": [
            "fix",
            "low"
          ],
          "themes": [],
          "priority_indicators": [
            "fix",
            "low"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-112",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.category: this weekacceptance criteria:\u2022 dice scraper selectors updated\u2022 scraper successfully extracts job data\u2022 error handling for selector failures\u2022 test coverage for dice scraper",
          "word_count": 36,
          "keywords": [
            "fix",
            "data",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-107",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.category: this weekacceptance criteria:\u2022 snowflake manager is initialized in app.py\u2022 jobs are saved to both sqlite and snowflake\u2022 error handling for snowflake connection failures\u2022 configuration for snowflake credentials",
          "word_count": 52,
          "keywords": [
            "configuration",
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "sql",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "high"
        },
        {
          "issue_key": "JB-103",
          "summary": "Production Stability & Monitoring",
          "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.category: \ud83d\udc1b bug fixes",
          "word_count": 17,
          "keywords": [
            "monitoring",
            "broken",
            "fix",
            "production"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix",
            "production"
          ],
          "technical_indicators": [
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-92",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
          "word_count": 17,
          "keywords": [
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-88",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
          "word_count": 15,
          "keywords": [
            "function",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-87",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
          "word_count": 17,
          "keywords": [
            "broken",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-86",
          "summary": "Fix Stack Overflow Scraper",
          "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.",
          "word_count": 14,
          "keywords": [
            "fix",
            "low"
          ],
          "themes": [],
          "priority_indicators": [
            "fix",
            "low"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-85",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.",
          "word_count": 14,
          "keywords": [
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-80",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-76",
          "summary": "Production Stability & Monitoring",
          "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.",
          "word_count": 14,
          "keywords": [
            "monitoring",
            "broken",
            "fix",
            "production"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix",
            "production"
          ],
          "technical_indicators": [
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-64",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
          "word_count": 17,
          "keywords": [
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-60",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
          "word_count": 15,
          "keywords": [
            "function",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-59",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
          "word_count": 17,
          "keywords": [
            "broken",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-58",
          "summary": "Fix Stack Overflow Scraper",
          "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.",
          "word_count": 14,
          "keywords": [
            "fix",
            "low"
          ],
          "themes": [],
          "priority_indicators": [
            "fix",
            "low"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-57",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.",
          "word_count": 14,
          "keywords": [
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-52",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-48",
          "summary": "Production Stability & Monitoring",
          "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.",
          "word_count": 14,
          "keywords": [
            "monitoring",
            "broken",
            "fix",
            "production"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix",
            "production"
          ],
          "technical_indicators": [
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-37",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
          "word_count": 17,
          "keywords": [
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-33",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
          "word_count": 15,
          "keywords": [
            "function",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-32",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
          "word_count": 17,
          "keywords": [
            "broken",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        }
      ],
      "count": 26,
      "keywords": [
        "critical",
        "urgent",
        "broken",
        "fix",
        "emergency"
      ]
    },
    "\ud83d\udd27 Complex Technical Work": {
      "description": "High-complexity technical tasks requiring expertise",
      "tickets": [
        {
          "issue_key": "JB-125",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 api endpoint tests\u2022 database integration tests\u2022 end-to-end test scenarios\u2022 test data management",
          "word_count": 30,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing",
            "data",
            "database",
            "quality"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-122",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 unified database interface created\u2022 postgresql and snowflake support\u2022 connection pooling implemented\u2022 database abstraction layer",
          "word_count": 32,
          "keywords": [
            "database",
            "architecture",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "architecture",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-121",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.category: to doacceptance criteria:\u2022 all scrapers migrated to basescraper\u2022 legacy scraper code removed\u2022 plugin configuration system\u2022 migration testing completed",
          "word_count": 31,
          "keywords": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-116",
          "summary": "Implement Redis Caching",
          "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 redis integration implemented\u2022 cache invalidation strategies\u2022 performance monitoring\u2022 configuration management",
          "word_count": 27,
          "keywords": [
            "integration",
            "performance",
            "monitoring",
            "configuration",
            "redis",
            "caching",
            "validation"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "performance",
            "monitoring",
            "configuration",
            "redis",
            "caching"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-110",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 streamlit app created\u2022 snowflake connection established\u2022 interactive analytics dashboard\u2022 real-time data visualization",
          "word_count": 34,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "data",
            "analytics",
            "snowflake",
            "lake",
            "real-time",
            "ai",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-109",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 cortex ai functions integrated\u2022 job analysis using snowflake ai\u2022 skill matching with ai assistance\u2022 performance optimization for ai queries",
          "word_count": 41,
          "keywords": [
            "function",
            "integration",
            "performance",
            "snowflake",
            "analytics",
            "analytics",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "function",
            "integration",
            "performance",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-107",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.category: this weekacceptance criteria:\u2022 snowflake manager is initialized in app.py\u2022 jobs are saved to both sqlite and snowflake\u2022 error handling for snowflake connection failures\u2022 configuration for snowflake credentials",
          "word_count": 52,
          "keywords": [
            "configuration",
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "sql",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "high"
        },
        {
          "issue_key": "JB-101",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.category: \ud83d\ude80 data upgrades",
          "word_count": 22,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-95",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-74",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-67",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-46",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-40",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        }
      ],
      "count": 13,
      "keywords": [
        "architecture",
        "migration",
        "integration",
        "performance"
      ]
    },
    "\ud83d\udcca Data & Analytics": {
      "description": "Data processing, analytics, and business intelligence",
      "tickets": [
        {
          "issue_key": "JB-130",
          "summary": "Implement Real-time Job Alerts",
          "full_text": "implement real-time job alerts add real-time notifications for new job postings matching user criteria.category: general backlogacceptance criteria:\u2022 real-time notification system\u2022 user preference management\u2022 email and push notifications\u2022 alert frequency controls",
          "word_count": 30,
          "keywords": [
            "user",
            "real-time",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-125",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 api endpoint tests\u2022 database integration tests\u2022 end-to-end test scenarios\u2022 test data management",
          "word_count": 30,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing",
            "data",
            "database",
            "quality"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-124",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 unit tests for all scrapers\u2022 mock external dependencies\u2022 test coverage >80%\u2022 automated test execution",
          "word_count": 33,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-123",
          "summary": "Add Database Migration System",
          "full_text": "add database migration system implement alembic/flask-migrate for database schema management.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 alembic migration system setup\u2022 initial migration created\u2022 migration rollback support\u2022 automated migration deployment",
          "word_count": 27,
          "keywords": [
            "database",
            "migration",
            "deployment",
            "deploy",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [
            "deploy"
          ],
          "technical_indicators": [
            "database",
            "migration",
            "deployment"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-122",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 unified database interface created\u2022 postgresql and snowflake support\u2022 connection pooling implemented\u2022 database abstraction layer",
          "word_count": 32,
          "keywords": [
            "database",
            "architecture",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "architecture",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-118",
          "summary": "Implement Health Check System",
          "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 health check endpoints created\u2022 database connectivity checks\u2022 external service monitoring\u2022 automated alerting system",
          "word_count": 30,
          "keywords": [
            "database",
            "endpoint",
            "monitoring",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "endpoint",
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-116",
          "summary": "Implement Redis Caching",
          "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 redis integration implemented\u2022 cache invalidation strategies\u2022 performance monitoring\u2022 configuration management",
          "word_count": 27,
          "keywords": [
            "integration",
            "performance",
            "monitoring",
            "configuration",
            "redis",
            "caching",
            "validation"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "performance",
            "monitoring",
            "configuration",
            "redis",
            "caching"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-112",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.category: this weekacceptance criteria:\u2022 dice scraper selectors updated\u2022 scraper successfully extracts job data\u2022 error handling for selector failures\u2022 test coverage for dice scraper",
          "word_count": 36,
          "keywords": [
            "fix",
            "data",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-111",
          "summary": "Configure Snowflake Data Sharing",
          "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.category: \ud83d\ude80 data upgradesacceptance criteria:\u2022 data sharing policies configured\u2022 secure access controls implemented\u2022 external data sharing enabled\u2022 documentation for data sharing setup",
          "word_count": 37,
          "keywords": [
            "snowflake",
            "data",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-110",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 streamlit app created\u2022 snowflake connection established\u2022 interactive analytics dashboard\u2022 real-time data visualization",
          "word_count": 34,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "data",
            "analytics",
            "snowflake",
            "lake",
            "real-time",
            "ai",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-109",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 cortex ai functions integrated\u2022 job analysis using snowflake ai\u2022 skill matching with ai assistance\u2022 performance optimization for ai queries",
          "word_count": 41,
          "keywords": [
            "function",
            "integration",
            "performance",
            "snowflake",
            "analytics",
            "analytics",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "function",
            "integration",
            "performance",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-108",
          "summary": "Create Snowflake Native App Manifest",
          "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.category: \ud83d\ude80 data upgradesacceptance criteria:\u2022 native app manifest file created\u2022 app metadata and permissions defined\u2022 installation and configuration scripts\u2022 app marketplace listing prepared",
          "word_count": 40,
          "keywords": [
            "configuration",
            "snowflake",
            "market",
            "data",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "market"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-107",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.category: this weekacceptance criteria:\u2022 snowflake manager is initialized in app.py\u2022 jobs are saved to both sqlite and snowflake\u2022 error handling for snowflake connection failures\u2022 configuration for snowflake credentials",
          "word_count": 52,
          "keywords": [
            "configuration",
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "sql",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "high"
        },
        {
          "issue_key": "JB-106",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.category: \ud83e\uddea testing & quality",
          "word_count": 15,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-105",
          "summary": "Testing & Quality Assurance",
          "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.category: \ud83e\uddea testing & quality",
          "word_count": 16,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-104",
          "summary": "Database & Infrastructure",
          "full_text": "database & infrastructure unify database systems and implement proper infrastructure management.category: \ud83c\udfd7\ufe0f architecture",
          "word_count": 13,
          "keywords": [
            "database",
            "infrastructure",
            "architecture",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "infrastructure",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-101",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.category: \ud83d\ude80 data upgrades",
          "word_count": 22,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-98",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-96",
          "summary": "Add Database Migration System",
          "full_text": "add database migration system implement alembic/flask-migrate for database schema management.",
          "word_count": 10,
          "keywords": [
            "database",
            "migration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "migration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-95",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-84",
          "summary": "Configure Snowflake Data Sharing",
          "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.",
          "word_count": 16,
          "keywords": [
            "snowflake",
            "data",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-83",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "analytics",
            "snowflake",
            "lake",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-82",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-81",
          "summary": "Create Snowflake Native App Manifest",
          "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.",
          "word_count": 18,
          "keywords": [
            "snowflake",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-80",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-78",
          "summary": "Testing & Quality Assurance",
          "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.",
          "word_count": 12,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-77",
          "summary": "Database & Infrastructure",
          "full_text": "database & infrastructure unify database systems and implement proper infrastructure management.",
          "word_count": 11,
          "keywords": [
            "database",
            "infrastructure",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "infrastructure"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-74",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-70",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-68",
          "summary": "Add Database Migration System",
          "full_text": "add database migration system implement alembic/flask-migrate for database schema management.",
          "word_count": 10,
          "keywords": [
            "database",
            "migration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "migration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-67",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-56",
          "summary": "Configure Snowflake Data Sharing",
          "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.",
          "word_count": 16,
          "keywords": [
            "snowflake",
            "data",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-55",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "analytics",
            "snowflake",
            "lake",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-54",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-53",
          "summary": "Create Snowflake Native App Manifest",
          "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.",
          "word_count": 18,
          "keywords": [
            "snowflake",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-52",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-50",
          "summary": "Testing & Quality Assurance",
          "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.",
          "word_count": 12,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-49",
          "summary": "Database & Infrastructure",
          "full_text": "database & infrastructure unify database systems and implement proper infrastructure management.",
          "word_count": 11,
          "keywords": [
            "database",
            "infrastructure",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "infrastructure"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-46",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-43",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-41",
          "summary": "Add Database Migration System",
          "full_text": "add database migration system implement alembic/flask-migrate for database schema management.",
          "word_count": 10,
          "keywords": [
            "database",
            "migration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "migration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-40",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        }
      ],
      "count": 42,
      "keywords": [
        "data",
        "analytics",
        "snowflake",
        "database",
        "reporting"
      ]
    },
    "\ud83e\udd16 AI & Machine Learning": {
      "description": "Artificial intelligence and machine learning features",
      "tickets": [
        {
          "issue_key": "JB-130",
          "summary": "Implement Real-time Job Alerts",
          "full_text": "implement real-time job alerts add real-time notifications for new job postings matching user criteria.category: general backlogacceptance criteria:\u2022 real-time notification system\u2022 user preference management\u2022 email and push notifications\u2022 alert frequency controls",
          "word_count": 30,
          "keywords": [
            "user",
            "real-time",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-128",
          "summary": "Implement Premium Job Matching Features",
          "full_text": "implement premium job matching features add advanced job matching algorithms and premium features for monetization.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 advanced matching algorithms implemented\u2022 premium feature flag system\u2022 user subscription management\u2022 revenue tracking dashboard",
          "word_count": 33,
          "keywords": [
            "user",
            "revenue",
            "premium",
            "subscription",
            "monetization",
            "dashboard",
            "algorithm"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user",
            "revenue",
            "premium",
            "subscription",
            "monetization",
            "dashboard"
          ],
          "primary_theme": "ai",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-121",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.category: to doacceptance criteria:\u2022 all scrapers migrated to basescraper\u2022 legacy scraper code removed\u2022 plugin configuration system\u2022 migration testing completed",
          "word_count": 31,
          "keywords": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-120",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 scrapermanager integrated in app.py\u2022 dynamic scraper loading\u2022 plugin hot-reloading support\u2022 error handling for plugin failures",
          "word_count": 37,
          "keywords": [
            "architecture",
            "dashboard",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-117",
          "summary": "Add Rate Limiting Middleware",
          "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 rate limiting middleware added\u2022 configurable rate limits\u2022 user-specific rate limiting\u2022 monitoring and alerting",
          "word_count": 32,
          "keywords": [
            "api",
            "monitoring",
            "user",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "monitoring"
          ],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "ai",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-114",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 all 9 broken companies fixed\u2022 success rate improved to >90%\u2022 error logging for failed companies\u2022 automated retry mechanism",
          "word_count": 39,
          "keywords": [
            "logging",
            "broken",
            "fix",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [
            "logging"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-112",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.category: this weekacceptance criteria:\u2022 dice scraper selectors updated\u2022 scraper successfully extracts job data\u2022 error handling for selector failures\u2022 test coverage for dice scraper",
          "word_count": 36,
          "keywords": [
            "fix",
            "data",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-110",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 streamlit app created\u2022 snowflake connection established\u2022 interactive analytics dashboard\u2022 real-time data visualization",
          "word_count": 34,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "data",
            "analytics",
            "snowflake",
            "lake",
            "real-time",
            "ai",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-109",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 cortex ai functions integrated\u2022 job analysis using snowflake ai\u2022 skill matching with ai assistance\u2022 performance optimization for ai queries",
          "word_count": 41,
          "keywords": [
            "function",
            "integration",
            "performance",
            "snowflake",
            "analytics",
            "analytics",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "function",
            "integration",
            "performance",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-107",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.category: this weekacceptance criteria:\u2022 snowflake manager is initialized in app.py\u2022 jobs are saved to both sqlite and snowflake\u2022 error handling for snowflake connection failures\u2022 configuration for snowflake credentials",
          "word_count": 52,
          "keywords": [
            "configuration",
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "sql",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "high"
        },
        {
          "issue_key": "JB-102",
          "summary": "Plugin Architecture Migration",
          "full_text": "plugin architecture migration migrate all scrapers to the new plugin architecture for better maintainability and extensibility.category: \ud83c\udfd7\ufe0f architecture",
          "word_count": 18,
          "keywords": [
            "migration",
            "architecture",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "migration",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-101",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.category: \ud83d\ude80 data upgrades",
          "word_count": 22,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-94",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.",
          "word_count": 13,
          "keywords": [
            "architecture",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-90",
          "summary": "Add Rate Limiting Middleware",
          "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.",
          "word_count": 15,
          "keywords": [
            "api",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-83",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "analytics",
            "snowflake",
            "lake",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-82",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-80",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-75",
          "summary": "Plugin Architecture Migration",
          "full_text": "plugin architecture migration migrate all scrapers to the new plugin architecture for better maintainability and extensibility.",
          "word_count": 16,
          "keywords": [
            "migration",
            "architecture",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "migration",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-74",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-66",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.",
          "word_count": 13,
          "keywords": [
            "architecture",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-62",
          "summary": "Add Rate Limiting Middleware",
          "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.",
          "word_count": 15,
          "keywords": [
            "api",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-55",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "analytics",
            "snowflake",
            "lake",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-54",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-52",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-47",
          "summary": "Plugin Architecture Migration",
          "full_text": "plugin architecture migration migrate all scrapers to the new plugin architecture for better maintainability and extensibility.",
          "word_count": 16,
          "keywords": [
            "migration",
            "architecture",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "migration",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-46",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-39",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.",
          "word_count": 13,
          "keywords": [
            "architecture",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-35",
          "summary": "Add Rate Limiting Middleware",
          "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.",
          "word_count": 15,
          "keywords": [
            "api",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        }
      ],
      "count": 28,
      "keywords": [
        "ai",
        "ml",
        "machine learning",
        "cortex",
        "intelligence"
      ]
    },
    "\ud83d\udcb0 Business & Revenue": {
      "description": "Business features, monetization, and revenue generation",
      "tickets": [
        {
          "issue_key": "JB-131",
          "summary": "Add User Authentication System",
          "full_text": "add user authentication system implement user registration, login, and profile management.category: general backlogacceptance criteria:\u2022 user registration and login\u2022 password reset functionality\u2022 profile management\u2022 session management",
          "word_count": 25,
          "keywords": [
            "function",
            "user"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-130",
          "summary": "Implement Real-time Job Alerts",
          "full_text": "implement real-time job alerts add real-time notifications for new job postings matching user criteria.category: general backlogacceptance criteria:\u2022 real-time notification system\u2022 user preference management\u2022 email and push notifications\u2022 alert frequency controls",
          "word_count": 30,
          "keywords": [
            "user",
            "real-time",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-129",
          "summary": "Add API Rate Limiting for Premium Users",
          "full_text": "add api rate limiting for premium users implement tiered api access with higher limits for premium users.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 tiered rate limiting implemented\u2022 premium user identification\u2022 usage tracking and billing\u2022 api key management system",
          "word_count": 36,
          "keywords": [
            "api",
            "user",
            "premium",
            "billing",
            "monetization",
            "high"
          ],
          "themes": [],
          "priority_indicators": [
            "high"
          ],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [
            "user",
            "premium",
            "billing",
            "monetization"
          ],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-128",
          "summary": "Implement Premium Job Matching Features",
          "full_text": "implement premium job matching features add advanced job matching algorithms and premium features for monetization.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 advanced matching algorithms implemented\u2022 premium feature flag system\u2022 user subscription management\u2022 revenue tracking dashboard",
          "word_count": 33,
          "keywords": [
            "user",
            "revenue",
            "premium",
            "subscription",
            "monetization",
            "dashboard",
            "algorithm"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user",
            "revenue",
            "premium",
            "subscription",
            "monetization",
            "dashboard"
          ],
          "primary_theme": "ai",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-120",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 scrapermanager integrated in app.py\u2022 dynamic scraper loading\u2022 plugin hot-reloading support\u2022 error handling for plugin failures",
          "word_count": 37,
          "keywords": [
            "architecture",
            "dashboard",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "ai",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-117",
          "summary": "Add Rate Limiting Middleware",
          "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 rate limiting middleware added\u2022 configurable rate limits\u2022 user-specific rate limiting\u2022 monitoring and alerting",
          "word_count": 32,
          "keywords": [
            "api",
            "monitoring",
            "user",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "monitoring"
          ],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "ai",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-110",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 streamlit app created\u2022 snowflake connection established\u2022 interactive analytics dashboard\u2022 real-time data visualization",
          "word_count": 34,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "data",
            "analytics",
            "snowflake",
            "lake",
            "real-time",
            "ai",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-109",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 cortex ai functions integrated\u2022 job analysis using snowflake ai\u2022 skill matching with ai assistance\u2022 performance optimization for ai queries",
          "word_count": 41,
          "keywords": [
            "function",
            "integration",
            "performance",
            "snowflake",
            "analytics",
            "analytics",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "function",
            "integration",
            "performance",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-108",
          "summary": "Create Snowflake Native App Manifest",
          "full_text": "create snowflake native app manifest develop a snowflake native app manifest to package jobpulse as a snowflake application.category: \ud83d\ude80 data upgradesacceptance criteria:\u2022 native app manifest file created\u2022 app metadata and permissions defined\u2022 installation and configuration scripts\u2022 app marketplace listing prepared",
          "word_count": 40,
          "keywords": [
            "configuration",
            "snowflake",
            "market",
            "data",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "market"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-107",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.category: this weekacceptance criteria:\u2022 snowflake manager is initialized in app.py\u2022 jobs are saved to both sqlite and snowflake\u2022 error handling for snowflake connection failures\u2022 configuration for snowflake credentials",
          "word_count": 52,
          "keywords": [
            "configuration",
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "sql",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "configuration",
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "high"
        },
        {
          "issue_key": "JB-101",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.category: \ud83d\ude80 data upgrades",
          "word_count": 22,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-93",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
          "word_count": 19,
          "keywords": [
            "dashboard"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-83",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "analytics",
            "snowflake",
            "lake",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-80",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-74",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-65",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
          "word_count": 19,
          "keywords": [
            "dashboard"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-55",
          "summary": "Add Streamlit Dashboard Integration",
          "full_text": "add streamlit dashboard integration create a streamlit dashboard that connects to snowflake for advanced analytics and visualization.",
          "word_count": 17,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "dashboard",
            "analytics",
            "snowflake",
            "lake",
            "ml"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics",
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-52",
          "summary": "Integrate Snowflake Manager into Web Dashboard",
          "full_text": "integrate snowflake manager into web dashboard connect the existing snowflake manager to the main flask web dashboard (app.py) to enable snowflake data storage in production.",
          "word_count": 25,
          "keywords": [
            "snowflake",
            "dashboard",
            "production",
            "data",
            "snowflake",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [
            "production"
          ],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-46",
          "summary": "Snowflake Enterprise Integration",
          "full_text": "snowflake enterprise integration integrate jobpulse with snowflake ecosystem for enterprise-grade data analytics, ai capabilities, and cloud data warehouse features.",
          "word_count": 19,
          "keywords": [
            "integration",
            "snowflake",
            "analytics",
            "data",
            "analytics",
            "snowflake",
            "warehouse",
            "lake",
            "ai"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-38",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
          "word_count": 19,
          "keywords": [
            "dashboard"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        }
      ],
      "count": 20,
      "keywords": [
        "business",
        "revenue",
        "premium",
        "monetization",
        "user"
      ]
    },
    "\ud83c\udfd7\ufe0f Infrastructure & Ops": {
      "description": "Infrastructure, operations, and system maintenance",
      "tickets": [
        {
          "issue_key": "JB-125",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 api endpoint tests\u2022 database integration tests\u2022 end-to-end test scenarios\u2022 test data management",
          "word_count": 30,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing",
            "data",
            "database",
            "quality"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-122",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 unified database interface created\u2022 postgresql and snowflake support\u2022 connection pooling implemented\u2022 database abstraction layer",
          "word_count": 32,
          "keywords": [
            "database",
            "architecture",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "architecture",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-121",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.category: to doacceptance criteria:\u2022 all scrapers migrated to basescraper\u2022 legacy scraper code removed\u2022 plugin configuration system\u2022 migration testing completed",
          "word_count": 31,
          "keywords": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-116",
          "summary": "Implement Redis Caching",
          "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 redis integration implemented\u2022 cache invalidation strategies\u2022 performance monitoring\u2022 configuration management",
          "word_count": 27,
          "keywords": [
            "integration",
            "performance",
            "monitoring",
            "configuration",
            "redis",
            "caching",
            "validation"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "integration",
            "performance",
            "monitoring",
            "configuration",
            "redis",
            "caching"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-109",
          "summary": "Implement Snowflake Cortex AI Integration",
          "full_text": "implement snowflake cortex ai integration integrate snowflake cortex ai services for advanced job analysis and matching capabilities.category: \ud83d\udcca analytics & aiacceptance criteria:\u2022 cortex ai functions integrated\u2022 job analysis using snowflake ai\u2022 skill matching with ai assistance\u2022 performance optimization for ai queries",
          "word_count": 41,
          "keywords": [
            "function",
            "integration",
            "performance",
            "snowflake",
            "analytics",
            "analytics",
            "snowflake",
            "lake",
            "ai",
            "cortex"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "ai",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "function",
            "integration",
            "performance",
            "snowflake"
          ],
          "business_indicators": [
            "analytics"
          ],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-98",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-70",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-43",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        }
      ],
      "count": 8,
      "keywords": [
        "infrastructure",
        "monitoring",
        "deployment",
        "security",
        "performance"
      ]
    },
    "\ud83d\udc64 User Experience": {
      "description": "User interface, experience, and interaction improvements",
      "tickets": [
        {
          "issue_key": "JB-131",
          "summary": "Add User Authentication System",
          "full_text": "add user authentication system implement user registration, login, and profile management.category: general backlogacceptance criteria:\u2022 user registration and login\u2022 password reset functionality\u2022 profile management\u2022 session management",
          "word_count": 25,
          "keywords": [
            "function",
            "user"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-130",
          "summary": "Implement Real-time Job Alerts",
          "full_text": "implement real-time job alerts add real-time notifications for new job postings matching user criteria.category: general backlogacceptance criteria:\u2022 real-time notification system\u2022 user preference management\u2022 email and push notifications\u2022 alert frequency controls",
          "word_count": 30,
          "keywords": [
            "user",
            "real-time",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-129",
          "summary": "Add API Rate Limiting for Premium Users",
          "full_text": "add api rate limiting for premium users implement tiered api access with higher limits for premium users.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 tiered rate limiting implemented\u2022 premium user identification\u2022 usage tracking and billing\u2022 api key management system",
          "word_count": 36,
          "keywords": [
            "api",
            "user",
            "premium",
            "billing",
            "monetization",
            "high"
          ],
          "themes": [],
          "priority_indicators": [
            "high"
          ],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [
            "user",
            "premium",
            "billing",
            "monetization"
          ],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-128",
          "summary": "Implement Premium Job Matching Features",
          "full_text": "implement premium job matching features add advanced job matching algorithms and premium features for monetization.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 advanced matching algorithms implemented\u2022 premium feature flag system\u2022 user subscription management\u2022 revenue tracking dashboard",
          "word_count": 33,
          "keywords": [
            "user",
            "revenue",
            "premium",
            "subscription",
            "monetization",
            "dashboard",
            "algorithm"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "user",
            "revenue",
            "premium",
            "subscription",
            "monetization",
            "dashboard"
          ],
          "primary_theme": "ai",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-122",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 unified database interface created\u2022 postgresql and snowflake support\u2022 connection pooling implemented\u2022 database abstraction layer",
          "word_count": 32,
          "keywords": [
            "database",
            "architecture",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "architecture",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-117",
          "summary": "Add Rate Limiting Middleware",
          "full_text": "add rate limiting middleware implement rate limiting to prevent api abuse and ensure fair usage.category: \ud83d\udd27 technical upgradesacceptance criteria:\u2022 rate limiting middleware added\u2022 configurable rate limits\u2022 user-specific rate limiting\u2022 monitoring and alerting",
          "word_count": 32,
          "keywords": [
            "api",
            "monitoring",
            "user",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "monitoring"
          ],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "ai",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-95",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-67",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-40",
          "summary": "Unify Database Managers",
          "full_text": "unify database managers create a unified database interface that works with both postgresql and snowflake.",
          "word_count": 15,
          "keywords": [
            "database",
            "postgresql",
            "snowflake",
            "data",
            "snowflake",
            "database",
            "sql",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "database",
            "postgresql",
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        }
      ],
      "count": 9,
      "keywords": [
        "user",
        "interface",
        "experience",
        "ui",
        "ux",
        "dashboard"
      ]
    },
    "\ud83e\uddea Quality & Testing": {
      "description": "Testing, quality assurance, and code quality",
      "tickets": [
        {
          "issue_key": "JB-125",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 api endpoint tests\u2022 database integration tests\u2022 end-to-end test scenarios\u2022 test data management",
          "word_count": 30,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing",
            "data",
            "database",
            "quality"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-124",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.category: \ud83e\uddea testing & qualityacceptance criteria:\u2022 unit tests for all scrapers\u2022 mock external dependencies\u2022 test coverage >80%\u2022 automated test execution",
          "word_count": 33,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-121",
          "summary": "Migrate All Remaining Scrapers",
          "full_text": "migrate all remaining scrapers migrate all 20+ scrapers to the new plugin architecture.category: to doacceptance criteria:\u2022 all scrapers migrated to basescraper\u2022 legacy scraper code removed\u2022 plugin configuration system\u2022 migration testing completed",
          "word_count": 31,
          "keywords": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration",
            "ai"
          ],
          "themes": [
            "ai"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "code",
            "migration",
            "testing",
            "architecture",
            "configuration"
          ],
          "business_indicators": [],
          "primary_theme": "ai",
          "complexity": "high",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-115",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 lever scraper completely rebuilt\u2022 success rate >80% achieved\u2022 proper error handling implemented\u2022 comprehensive testing added",
          "word_count": 34,
          "keywords": [
            "function",
            "testing",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-112",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.category: this weekacceptance criteria:\u2022 dice scraper selectors updated\u2022 scraper successfully extracts job data\u2022 error handling for selector failures\u2022 test coverage for dice scraper",
          "word_count": 36,
          "keywords": [
            "fix",
            "data",
            "ai"
          ],
          "themes": [
            "data",
            "ai"
          ],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-106",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.category: \ud83e\uddea testing & quality",
          "word_count": 15,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-105",
          "summary": "Testing & Quality Assurance",
          "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.category: \ud83e\uddea testing & quality",
          "word_count": 16,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-98",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-97",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
          "word_count": 14,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-78",
          "summary": "Testing & Quality Assurance",
          "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.",
          "word_count": 12,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-73",
          "summary": "Test Epic",
          "full_text": "test epic test epic description",
          "word_count": 5,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-70",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-69",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
          "word_count": 14,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-50",
          "summary": "Testing & Quality Assurance",
          "full_text": "testing & quality assurance implement comprehensive testing suite and quality assurance processes.",
          "word_count": 12,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-43",
          "summary": "Create Integration Test Suite",
          "full_text": "create integration test suite develop integration tests for api endpoints and database operations.",
          "word_count": 13,
          "keywords": [
            "api",
            "database",
            "endpoint",
            "integration",
            "data",
            "database"
          ],
          "themes": [
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "api",
            "database",
            "endpoint",
            "integration"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-42",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
          "word_count": 14,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        }
      ],
      "count": 16,
      "keywords": [
        "test",
        "testing",
        "quality",
        "qa",
        "coverage",
        "validation"
      ]
    },
    "\ud83d\udcda Documentation & Knowledge": {
      "description": "Documentation, knowledge management, and information",
      "tickets": [
        {
          "issue_key": "JB-127",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.category: to doacceptance criteria:\u2022 adr template created\u2022 key decisions documented\u2022 decision rationale included\u2022 review and approval process",
          "word_count": 27,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-126",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.category: to doacceptance criteria:\u2022 swagger/openapi documentation\u2022 interactive api explorer\u2022 request/response examples\u2022 authentication documentation",
          "word_count": 21,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-111",
          "summary": "Configure Snowflake Data Sharing",
          "full_text": "configure snowflake data sharing set up secure data sharing capabilities in snowflake for external data access.category: \ud83d\ude80 data upgradesacceptance criteria:\u2022 data sharing policies configured\u2022 secure access controls implemented\u2022 external data sharing enabled\u2022 documentation for data sharing setup",
          "word_count": 37,
          "keywords": [
            "snowflake",
            "data",
            "snowflake",
            "lake"
          ],
          "themes": [
            "data",
            "data",
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "snowflake"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-106",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.category: \ud83e\uddea testing & quality",
          "word_count": 15,
          "keywords": [
            "testing",
            "quality"
          ],
          "themes": [
            "data"
          ],
          "priority_indicators": [],
          "technical_indicators": [
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "data",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-100",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.",
          "word_count": 11,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-99",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
          "word_count": 9,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-79",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.",
          "word_count": 11,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-72",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.",
          "word_count": 11,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-71",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
          "word_count": 9,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-51",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.",
          "word_count": 11,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-45",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.",
          "word_count": 11,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-44",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
          "word_count": 9,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        }
      ],
      "count": 12,
      "keywords": [
        "documentation",
        "doc",
        "knowledge",
        "guide",
        "manual"
      ]
    },
    "\ud83d\udee0\ufe0f General Development": {
      "description": "General development tasks and improvements",
      "tickets": [
        {
          "issue_key": "JB-131",
          "summary": "Add User Authentication System",
          "full_text": "add user authentication system implement user registration, login, and profile management.category: general backlogacceptance criteria:\u2022 user registration and login\u2022 password reset functionality\u2022 profile management\u2022 session management",
          "word_count": 25,
          "keywords": [
            "function",
            "user"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [
            "user"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-129",
          "summary": "Add API Rate Limiting for Premium Users",
          "full_text": "add api rate limiting for premium users implement tiered api access with higher limits for premium users.category: \ud83d\udcb0 monetization tasksacceptance criteria:\u2022 tiered rate limiting implemented\u2022 premium user identification\u2022 usage tracking and billing\u2022 api key management system",
          "word_count": 36,
          "keywords": [
            "api",
            "user",
            "premium",
            "billing",
            "monetization",
            "high"
          ],
          "themes": [],
          "priority_indicators": [
            "high"
          ],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [
            "user",
            "premium",
            "billing",
            "monetization"
          ],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-127",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.category: to doacceptance criteria:\u2022 adr template created\u2022 key decisions documented\u2022 decision rationale included\u2022 review and approval process",
          "word_count": 27,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-126",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.category: to doacceptance criteria:\u2022 swagger/openapi documentation\u2022 interactive api explorer\u2022 request/response examples\u2022 authentication documentation",
          "word_count": 21,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-119",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.category: \ud83c\udfd7\ufe0f architectureacceptance criteria:\u2022 indeed scraper migrated\u2022 linkedin scraper migrated\u2022 glassdoor scraper migrated\u2022 basescraper functionality verified",
          "word_count": 32,
          "keywords": [
            "function",
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "function",
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "high"
        },
        {
          "issue_key": "JB-115",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.category: \ud83d\udc1b bug fixesacceptance criteria:\u2022 lever scraper completely rebuilt\u2022 success rate >80% achieved\u2022 proper error handling implemented\u2022 comprehensive testing added",
          "word_count": 34,
          "keywords": [
            "function",
            "testing",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function",
            "testing"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-113",
          "summary": "Fix Stack Overflow Scraper",
          "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.category: this weekacceptance criteria:\u2022 403 errors resolved\u2022 updated selectors for current site\u2022 anti-bot measures implemented\u2022 scraper reliability improved",
          "word_count": 31,
          "keywords": [
            "fix",
            "low"
          ],
          "themes": [],
          "priority_indicators": [
            "fix",
            "low"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-103",
          "summary": "Production Stability & Monitoring",
          "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.category: \ud83d\udc1b bug fixes",
          "word_count": 17,
          "keywords": [
            "monitoring",
            "broken",
            "fix",
            "production"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix",
            "production"
          ],
          "technical_indicators": [
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-100",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.",
          "word_count": 11,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-99",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
          "word_count": 9,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-97",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
          "word_count": 14,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-93",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
          "word_count": 19,
          "keywords": [
            "dashboard"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-92",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
          "word_count": 17,
          "keywords": [
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-91",
          "summary": "Implement Health Check System",
          "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.",
          "word_count": 13,
          "keywords": [
            "endpoint",
            "monitoring"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "endpoint",
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-89",
          "summary": "Implement Redis Caching",
          "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.",
          "word_count": 13,
          "keywords": [
            "performance",
            "redis",
            "caching"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "performance",
            "redis",
            "caching"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-88",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
          "word_count": 15,
          "keywords": [
            "function",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-87",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
          "word_count": 17,
          "keywords": [
            "broken",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-86",
          "summary": "Fix Stack Overflow Scraper",
          "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.",
          "word_count": 14,
          "keywords": [
            "fix",
            "low"
          ],
          "themes": [],
          "priority_indicators": [
            "fix",
            "low"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-85",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.",
          "word_count": 14,
          "keywords": [
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-79",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.",
          "word_count": 11,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-76",
          "summary": "Production Stability & Monitoring",
          "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.",
          "word_count": 14,
          "keywords": [
            "monitoring",
            "broken",
            "fix",
            "production"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix",
            "production"
          ],
          "technical_indicators": [
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-73",
          "summary": "Test Epic",
          "full_text": "test epic test epic description",
          "word_count": 5,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-72",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.",
          "word_count": 11,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-71",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
          "word_count": 9,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-69",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
          "word_count": 14,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-65",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
          "word_count": 19,
          "keywords": [
            "dashboard"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-64",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
          "word_count": 17,
          "keywords": [
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-63",
          "summary": "Implement Health Check System",
          "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.",
          "word_count": 13,
          "keywords": [
            "endpoint",
            "monitoring"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "endpoint",
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-61",
          "summary": "Implement Redis Caching",
          "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.",
          "word_count": 13,
          "keywords": [
            "performance",
            "redis",
            "caching"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "performance",
            "redis",
            "caching"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-60",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
          "word_count": 15,
          "keywords": [
            "function",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-59",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
          "word_count": 17,
          "keywords": [
            "broken",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-58",
          "summary": "Fix Stack Overflow Scraper",
          "full_text": "fix stack overflow scraper resolve 403 errors and update selectors for stack overflow scraper.",
          "word_count": 14,
          "keywords": [
            "fix",
            "low"
          ],
          "themes": [],
          "priority_indicators": [
            "fix",
            "low"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-57",
          "summary": "Fix Dice Scraper Selectors",
          "full_text": "fix dice scraper selectors update dice scraper selectors to work with current website structure.",
          "word_count": 14,
          "keywords": [
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-51",
          "summary": "Documentation & Developer Experience",
          "full_text": "documentation & developer experience create comprehensive documentation and improve developer experience.",
          "word_count": 11,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-48",
          "summary": "Production Stability & Monitoring",
          "full_text": "production stability & monitoring fix broken scrapers and implement comprehensive monitoring and error tracking.",
          "word_count": 14,
          "keywords": [
            "monitoring",
            "broken",
            "fix",
            "production"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix",
            "production"
          ],
          "technical_indicators": [
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-45",
          "summary": "Create Architecture Decision Records",
          "full_text": "create architecture decision records document key architectural decisions and their rationale.",
          "word_count": 11,
          "keywords": [
            "architecture"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-44",
          "summary": "Create API Documentation",
          "full_text": "create api documentation generate comprehensive api documentation using swagger/openapi.",
          "word_count": 9,
          "keywords": [
            "api"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "api"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-42",
          "summary": "Add Unit Tests for All Scrapers",
          "full_text": "add unit tests for all scrapers create comprehensive unit test suite for all scrapers.",
          "word_count": 14,
          "keywords": [],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-38",
          "summary": "Update Web Dashboard to Use ScraperManager",
          "full_text": "update web dashboard to use scrapermanager modify web dashboard to use the new scrapermanager instead of individual scraper initialization.",
          "word_count": 19,
          "keywords": [
            "dashboard"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [],
          "business_indicators": [
            "dashboard"
          ],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-37",
          "summary": "Migrate Core Scrapers to BaseScraper",
          "full_text": "migrate core scrapers to basescraper refactor priority scrapers (indeed, linkedin, glassdoor) to use the new basescraper architecture.",
          "word_count": 17,
          "keywords": [
            "refactor",
            "architecture",
            "priority"
          ],
          "themes": [],
          "priority_indicators": [
            "priority"
          ],
          "technical_indicators": [
            "refactor",
            "architecture"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-36",
          "summary": "Implement Health Check System",
          "full_text": "implement health check system create comprehensive health check endpoints for monitoring system status.",
          "word_count": 13,
          "keywords": [
            "endpoint",
            "monitoring"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "endpoint",
            "monitoring"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-34",
          "summary": "Implement Redis Caching",
          "full_text": "implement redis caching replace in-memory storage with redis for better performance and scalability.",
          "word_count": 13,
          "keywords": [
            "performance",
            "redis",
            "caching"
          ],
          "themes": [],
          "priority_indicators": [],
          "technical_indicators": [
            "performance",
            "redis",
            "caching"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "medium",
          "urgency": "normal"
        },
        {
          "issue_key": "JB-33",
          "summary": "Fix Lever Scraper (0% Success Rate)",
          "full_text": "fix lever scraper (0% success rate) completely rebuild lever scraper to achieve functional success rate.",
          "word_count": 15,
          "keywords": [
            "function",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "fix"
          ],
          "technical_indicators": [
            "function"
          ],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        },
        {
          "issue_key": "JB-32",
          "summary": "Fix Greenhouse Scraper Issues",
          "full_text": "fix greenhouse scraper issues address the 9 broken companies in greenhouse scraper to improve 59% success rate.",
          "word_count": 17,
          "keywords": [
            "broken",
            "fix"
          ],
          "themes": [],
          "priority_indicators": [
            "broken",
            "fix"
          ],
          "technical_indicators": [],
          "business_indicators": [],
          "primary_theme": "general",
          "complexity": "low",
          "urgency": "high"
        }
      ],
      "count": 44,
      "keywords": [
        "development",
        "feature",
        "improvement",
        "enhancement"
      ]
    }
  }
}